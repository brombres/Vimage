uses Console/ANSIBitmap
uses UI

class VMGImageView : UIComponent [singleton]
  PROPERTIES
    image          : VMGImage
    display_image  : Bitmap
    canvas         : TextCanvas
    scale_to_fit   = true
    min_zoom       : Real64
    max_zoom       : Real64
    default_zoom   : Real64
    is_modified    : Logical
    visible_bounds : Box

  METHODS
    method init

    method on_draw
      localize display_bounds

      if (image)
        if (is_modified)
          is_modified = false
          visible_bounds = Box( image.bitmap.size )
          local new_size : XY
          if (min_zoom)
            new_size = ((image.bitmap.size->RealXY * image.zoom) + RealXY(0.5,0.5))->XY
          else
            local scale = ((display_bounds.size->RealXY*RealXY(1,2)) / image.bitmap.size->RealXY).min
            new_size = ((image.bitmap.size->RealXY * scale) + RealXY(0.5,0.5))->XY
            default_zoom = (new_size.x->Real64 / image.bitmap.width)
            min_zoom = default_zoom.or_smaller( 1.0 )
            max_zoom = which{ default_zoom>1.0:default_zoom || 1.0 }
            if (image.zoom)
              if (image.zoom < min_zoom)
                image.zoom = min_zoom
                image.view_center = RealXY(0.5,0.5)
              else
                new_size = ((image.bitmap.size->RealXY * image.zoom) + RealXY(0.5,0.5))->XY
              endIf
            else
              image.zoom = default_zoom
            endIf
          endIf
          VMGTitleBar.zoom = image.zoom
          display_image = image.bitmap.resized( new_size )
          canvas = ANSIBitmap( display_image )->TextCanvas( &bg=CharacterStyle.BG_DEFAULT )
        endIf

        ConsoleUICanvas.fill( display_bounds, StyledCharacter(' ',CharacterStyle.BG_DEFAULT) )

        temporarily ConsoleUICanvas.clip = display_bounds
          local sz = canvas.size
          local pos = Box( display_bounds.center - (sz*image.view_center), sz ).clamped( display_bounds ).top_left
          ConsoleUICanvas.draw( canvas, pos )
        endTemporarily

      else
        ConsoleUICanvas.fill( display_bounds, StyledCharacter(' ',CharacterStyle.BG_DEFAULT) )

      endIf

    method mark_modified
      is_modified = true
      request_redraw

    method scroll( delta:RealXY )
      if (image)
        if (image.zoom == default_zoom)
          image.view_center = RealXY(0.5,0.5)
        elseIf (image.zoom)
          delta *= display_bounds.size / (image.bitmap.size * image.zoom)
          image.view_center = (image.view_center + delta).clamped( 0.0, 1.0 )
        endIf
        request_redraw
      endIf

    method show( new_image:VMGImage )
      if (image and image.zoom == default_zoom) image.zoom = 0

      image = new_image
      min_zoom = 0
      default_zoom = 0
      scale_to_fit = true
      mark_modified

    method zoom_in
      if (image)
        if (image.zoom < max_zoom)
          image.zoom *= 2
          if (image.zoom >= max_zoom)
            image.zoom = max_zoom
          else
            local n = 0
            while (image.zoom < max_zoom)
              ++n
              image.zoom *= 2
            endWhile
            image.zoom = max_zoom
            loop (n) image.zoom /= 2
          endIf
        endIf
        VMGTitleBar.zoom = image.zoom
        mark_modified
      endIf

    method zoom_out
      if (image)
        if (image.zoom > min_zoom)
          image.zoom /= 2
          if (image.zoom < min_zoom)
            image.zoom = min_zoom
            image.view_center = RealXY(0.5,0.5)
          endIf
        endIf
        VMGTitleBar.zoom = image.zoom
        mark_modified
      endIf
endClass
