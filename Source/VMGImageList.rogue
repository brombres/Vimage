uses UI

class VMGImageList : UIList [singleton]
  DEFINITIONS
    FIXED_WIDTH = 16

  PROPERTIES
    selected : VMGImageListItem
    is_dim   : Logical

  METHODS
    method init
      prior.init
      on_resize

    method add( image:VMGImage )
      add( VMGImageListItem(image) )
      request_layout

    method after_draw
      if (is_dim) ConsoleUICanvas.style.dim_off

    method dispatch( e:PointerEvent )
      # Send input events to children in reverse order because the top layer comes last
      if (next) next.dispatch( e )
      if (e.is_consumed) return
      handle( e )

    method insert( image:VMGImage )
      insert( VMGImageListItem(image) )
      request_layout

    method on_draw
      if (is_dim) ConsoleUICanvas.style.dim

    method on_resize
      fixed_width = FIXED_WIDTH

      #{
    method request_redraw [override]
      prior.request_redraw
      scroll_view.request_redraw
      }#

    method scroll_view->VMGImageListScrollView
      local view = parent
      while (view)
        if local result = view->(as VMGImageListScrollView)
          return result
        endIf
        view .= parent
      endWhile
      return null

    method select( image:VMGImage )
      forEach (child in children)
        if local item = child->(as VMGImageListItem)
          if (item.image is image)
            select( item )
            return
          endIf
        endIf
      endForEach

    method select( item:VMGImageListItem ) [preferred]
      if (selected)
        selected.deselect
        selected.request_redraw
      endIf
      selected = item
      if (item)
        item.request_redraw
        VMGUI.show( item.image )
        localize scroll_view
        if (scroll_view)
          local item_bounds = item.display_bounds
          local view_bounds = scroll_view.display_bounds
          local delta = item_bounds.y2 - view_bounds.y2
          if (delta > 0)
            scroll_view.content_offset -= XY(0,delta)
          else
            delta = view_bounds.y1 - item_bounds.y1
            if (delta > 0)
              scroll_view.content_offset += XY(0,delta)
            endIf
          endIf
          #if local intersection = (item.display_bounds & this.display_bounds)
          #else
          #endIf
        endIf
      else
        VMGUI.show( null )
      endIf
endClass

class VMGImageListItem : UIComponent
  PROPERTIES
    image : VMGImage

  METHODS
    method init( image )
      on_resize

    method deselect

    method is_selected->Logical
      return VMGImageList.selected is this

    method on( e:PointerEvent )
      if (this.contains(e))
        if (e.is_release)
          VMGImageList.select( this )
          VMGStatusBar.text = "Select $"(image)
        endIf
      endIf

    method on_draw
      localize display_bounds
      localize is_selected
      temporarily ConsoleUICanvas.clip = display_bounds
        ConsoleUICanvas.cursor = display_bounds.position
        if (is_selected) ConsoleUICanvas.style.inverse
        ConsoleUICanvas.print image.compact_name
        loop (VMGImageList.FIXED_WIDTH) ConsoleUICanvas.print ' '
        if (is_selected) ConsoleUICanvas.style.inverse_off
      endTemporarily

    method on_resize
      fixed_size = XY( VMGImageList.FIXED_WIDTH, 1 )
endClass

class VMGImageListScrollView : UIScrollView
  METHODS
    method on_draw
      ConsoleUICanvas.fill( ' ' )
      ConsoleUICanvas.fill( display_bounds.with_width(1), StyledCharacter('~',CharacterStyle.DIM) )
endClass
