module Vimage

class BlitModeAND : BitmapBlitFn [singleton]
  METHODS
    method call( src:Bitmap, src_x1:Int32, src_y1:Int32, dest:Bitmap, dest_x1:Int32, dest_y1:Int32, blit_width:Int32, blit_height:Int32 )
      local src_width = src.width
      local dest_width = dest.width
      native @|RogueInt32* src_start  = $src->pixels->as_int32s + ($src_y1 * $src_width + $src_x1);
              |RogueInt32* src_limit  = src_start + $blit_width;
              |RogueInt32* dest_start = $dest->pixels->as_int32s + ($dest_y1 * $dest_width + $dest_x1);
              |
              |while (--$blit_height >= 0)
              |{
              |  RogueInt32* src  = src_start - 1;
              |  RogueInt32* dest = dest_start;
              |  while (++src < src_limit)
              |  {
              |    *(dest++) &= *src;
              |  }
              |  src_start  += $src_width;
              |  src_limit  += $src_width;
              |  dest_start += $dest_width;
              |}
endClass

class BlitModeOR : BitmapBlitFn [singleton]
  METHODS
    method call( src:Bitmap, src_x1:Int32, src_y1:Int32, dest:Bitmap, dest_x1:Int32, dest_y1:Int32, blit_width:Int32, blit_height:Int32 )
      local src_width = src.width
      local dest_width = dest.width
      native @|RogueInt32* src_start  = $src->pixels->as_int32s + ($src_y1 * $src_width + $src_x1);
              |RogueInt32* src_limit  = src_start + $blit_width;
              |RogueInt32* dest_start = $dest->pixels->as_int32s + ($dest_y1 * $dest_width + $dest_x1);
              |
              |while (--$blit_height >= 0)
              |{
              |  RogueInt32* src  = src_start - 1;
              |  RogueInt32* dest = dest_start;
              |  while (++src < src_limit)
              |  {
              |    *(dest++) |= *src;
              |  }
              |  src_start  += $src_width;
              |  src_limit  += $src_width;
              |  dest_start += $dest_width;
              |}
endClass

class BlitModeXOR : BitmapBlitFn [singleton]
  METHODS
    method call( src:Bitmap, src_x1:Int32, src_y1:Int32, dest:Bitmap, dest_x1:Int32, dest_y1:Int32, blit_width:Int32, blit_height:Int32 )
      local src_width = src.width
      local dest_width = dest.width
      native @|RogueInt32* src_start  = $src->pixels->as_int32s + ($src_y1 * $src_width + $src_x1);
              |RogueInt32* src_limit  = src_start + $blit_width;
              |RogueInt32* dest_start = $dest->pixels->as_int32s + ($dest_y1 * $dest_width + $dest_x1);
              |
              |while (--$blit_height >= 0)
              |{
              |  RogueInt32* src  = src_start - 1;
              |  RogueInt32* dest = dest_start;
              |  while (++src < src_limit)
              |  {
              |    *(dest++) ^= (*src & 0x00FFffFF);
              |  }
              |  src_start  += $src_width;
              |  src_limit  += $src_width;
              |  dest_start += $dest_width;
              |}
endClass
