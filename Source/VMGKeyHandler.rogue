class VMGKeyHandler
  PROPERTIES
    handler   : Function(KeyEvent)
    new_state : VMGState

  METHODS
    method init

    method init( handler )

    method init( new_state )

    method init( handler, new_state )

    method execute
      loop (which{Vimage.repeat_count||1})
        on_execute
      endLoop
      Vimage.repeat_count = null

    method on( e:KeyEvent )
      if (handler) handler(e)
      if (new_state) VMGState.change_state( new_state )

    method on_execute
      noAction

    method set_state( new_state:VMGState )
      VMGState.current.change_state( new_state )

    method set_status( text:String )
      if (Vimage.repeat_count)
        VMGStatusBar.text = "$$"(Vimage.repeat_count,text)
      else
        VMGStatusBar.text = text
      endIf
endClass

class KeyHandlerColon : VMGKeyHandler [singleton]
  METHODS
    method on( e:KeyEvent )
      Vimage.repeat_count = null
      status = ":"
      VMGUI.command.clear
      state = EnterCmdState()
endClass

class KeyHandlerQBuffer : VMGKeyHandler [singleton]
  METHODS
    method on( e:KeyEvent )
      status = "q (quit)"
      VMGUI.is_running = false
endClass

class KeyHandlerJBuffer : VMGKeyHandler [singleton]
  METHODS
    method on( e:KeyEvent )
      status = "j (down)"
      execute

    method on_execute
      if local current = VMGImageList.selected
        if (current.next)
          VMGImageList.select( current.next->(as VMGImageListItem) )
        endIf
      endIf
endClass

class KeyHandlerPeriod : VMGKeyHandler [singleton]
  METHODS
    method on( e:KeyEvent )
      if (Vimage.cmd)
        Vimage.execute( Vimage.cmd )
      endIf
endClass

class KeyHandlerShiftJBuffer : VMGKeyHandler [singleton]
  METHODS
    method on( e:KeyEvent )
      status = "J (shift down)"
      execute

    method on_execute
      if local current = VMGImageList.selected
        if local index = VMGImageList.locate( current )
          VMGImageList.remove( current )
          VMGImageList.insert( current, index+1 )
          VMGImageList.request_layout
        endIf
      endIf
endClass

class KeyHandlerKBuffer : VMGKeyHandler [singleton]
  METHODS
    method on( e:KeyEvent )
      status = "k (up)"
      execute

    method on_execute
      if local current = VMGImageList.selected
        forEach (child in VMGImageList.children)
          if (child.next is current)
            VMGImageList.select( child->(as VMGImageListItem) )
            escapeForEach
          endIf
        endForEach
      endIf
endClass

class KeyHandlerShiftKBuffer : VMGKeyHandler [singleton]
  METHODS
    method on( e:KeyEvent )
      status = "K (shift up)"
      execute

    method on_execute
      if local current = VMGImageList.selected
        if local index = VMGImageList.locate( current )
          if (index > 0)
            VMGImageList.remove( current )
            VMGImageList.insert( current, index-1 )
            VMGImageList.request_layout
          endIf
        endIf
      endIf
endClass

class KeyHandlerZ : VMGKeyHandler [singleton]
  METHODS
    method on( e:KeyEvent )
      status = "z (zoom in)"
      execute

    method on_execute
      VMGImageView.zoom_in
      if (VMGState.current is not ImageViewState) VMGState.change_state( ImageViewState )
endClass

class KeyHandlerShiftZ : VMGKeyHandler [singleton]
  METHODS
    method on( e:KeyEvent )
      status = "z (zoom out)"
      execute

    method on_execute
      VMGImageView.zoom_out
      if (VMGState.current is not ImageViewState) VMGState.change_state( ImageViewState )
endClass

